document,window,jarallax(document.querySelectorAll(".jarallax")),function(){"use strict";let i=void 0;function n(l,a){return new Promise(e=>{const t=()=>{a.removeEventListener("transitionend",t),e()};a.addEventListener("transitionend",t);var s=a.getAttribute("class"),i=a.getAttribute("style");l(),s===a.getAttribute("class")&&i===a.getAttribute("style")&&t(),0===parseFloat(getComputedStyle(a).transitionDuration)&&t()})}function o({src:e,srcset:t,sizes:s}){const i=new Image;return i.src=e,t&&(i.srcset=t),s&&(i.sizes=s),"decode"in i?new Promise((e,t)=>{i.decode().then(()=>{e(i)}).catch(()=>{t(i)})}):new Promise((e,t)=>{i.onload=e(i),i.onerror=t(i)})}function l(e){let t,s;var{imgHeight:i,imgWidth:l,containerHeight:a,containerWidth:n,canvasWidth:o,canvasHeight:c,imageSize:h}=e,e=i/l;return"cover"==h?e<a/n?(t=a,s=t/e):(s=n,t=s*e):"native"==h?(t=i,s=l):(c/o<e?(t=c,s=t/e):(s=o,t=s*e),"scale-down"===h&&(s>=l||t>=i)&&(s=l,t=i)),{height:t,width:s}}function c(e){return e.requestFullscreen?e.requestFullscreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():e.msRequestFullscreen?e.msRequestFullscreen():Promise.reject()}function a(){return document.exitFullscreen?document.exitFullscreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.msExitFullscreen?document.msExitFullscreen():Promise.reject()}const s={container:document.body,className:void 0,imageSize:"scale-down",fullScreen:!1,loop:!1,linkImages:!0,setIndex:0,firstImageIndex:0,lastImageIndex:!1,currentImageIndex:void 0,allowZoom:!0,closeOnBackgroundClick:!0,setTitle:function(){return""},description:function(){return this.images[this.settings.currentImageIndex].title},pagination:function(){var e=this.settings.lastImageIndex+1;return this.settings.currentImageIndex+1+"/"+e},afterInitialize(){},afterMarkup(){},afterImageLoad(){},afterClose(){},zoomedPaddingX:function(e,t){return 0},zoomedPaddingY:function(e,t){return 0}};class h{constructor(e,t){this.settings=t,this.elems={},this.images=[],this.events=[],this.state={fullScreenOpen:!1,initialZoomState:null,initialized:!1,timer:!1,visible:!1},this._cssClasses=["chocolat-open","chocolat-in-container","chocolat-cover","chocolat-zoomable","chocolat-zoomed","chocolat-zooming-in","chocolat-zooming-out"],NodeList.prototype.isPrototypeOf(e)||HTMLCollection.prototype.isPrototypeOf(e)?e.forEach((e,t)=>{this.images.push({title:e.getAttribute("title"),src:e.getAttribute("href"),srcset:e.getAttribute("data-srcset"),sizes:e.getAttribute("data-sizes")}),this.off(e,"click.chocolat"),this.on(e,"click.chocolat",e=>{this.init(t),e.preventDefault()})}):this.images=e,this.settings.container instanceof Element||this.settings.container instanceof HTMLElement?this.elems.container=this.settings.container:this.elems.container=document.body,this.api={open:e=>(e=parseInt(e)||0,this.init(e)),close:()=>this.close(),next:()=>this.change(1),prev:()=>this.change(-1),goto:e=>this.open(e),current:()=>this.settings.currentImageIndex,position:()=>this.position(this.elems.img),destroy:()=>this.destroy(),set:(e,t)=>this.settings[e]=t,get:e=>this.settings[e],getElem:e=>this.elems[e]}}init(e){return this.state.initialized||(this.markup(),this.attachListeners(),this.settings.lastImageIndex=this.images.length-1,this.state.initialized=!0),this.settings.afterInitialize.call(this),this.load(e)}load(t){if(this.state.visible||(this.state.visible=!0,setTimeout(()=>{this.elems.overlay.classList.add("chocolat-visible"),this.elems.wrapper.classList.add("chocolat-visible")},0),this.elems.container.classList.add("chocolat-open")),this.settings.fullScreen&&(this.state.fullScreenOpen=c(this.elems.wrapper)),this.settings.currentImageIndex===t)return Promise.resolve();let s=setTimeout(()=>{this.elems.loader.classList.add("chocolat-visible")},1e3),i,l,a=setTimeout(()=>{a=void 0,i=n(()=>{this.elems.imageCanvas.classList.remove("chocolat-visible")},this.elems.imageCanvas)},80);return o(this.images[t]).then(e=>(l=e,a?(clearTimeout(a),Promise.resolve()):i)).then(()=>{var e=t+1;return null!=this.images[e]&&o(this.images[e]),this.settings.currentImageIndex=t,this.elems.description.textContent=this.settings.description.call(this),this.elems.pagination.textContent=this.settings.pagination.call(this),this.arrows(),this.position(l).then(()=>(this.elems.loader.classList.remove("chocolat-visible"),clearTimeout(s),this.appear(l)))}).then(()=>{this.elems.container.classList.toggle("chocolat-zoomable",this.zoomable(l,this.elems.wrapper)),this.settings.afterImageLoad.call(this)})}position({naturalHeight:e,naturalWidth:t}){const{width:s,height:i}=l({imgHeight:e,imgWidth:t,containerHeight:this.elems.container.clientHeight,containerWidth:this.elems.container.clientWidth,canvasWidth:this.elems.imageCanvas.clientWidth,canvasHeight:this.elems.imageCanvas.clientHeight,imageSize:this.settings.imageSize});return n(()=>{Object.assign(this.elems.imageWrapper.style,{width:s+"px",height:i+"px"})},this.elems.imageWrapper)}appear(e){return this.elems.imageWrapper.removeChild(this.elems.img),this.elems.img=e,this.elems.img.setAttribute("class","chocolat-img"),this.elems.imageWrapper.appendChild(this.elems.img),n(()=>{this.elems.imageCanvas.classList.add("chocolat-visible")},this.elems.imageCanvas)}change(e){if(this.state.visible&&this.settings.linkImages){this.zoomOut();e=this.settings.currentImageIndex+parseInt(e);return e>this.settings.lastImageIndex?this.settings.loop?this.load(this.settings.firstImageIndex):void 0:e<this.settings.firstImageIndex?this.settings.loop?this.load(this.settings.lastImageIndex):void 0:this.load(e)}}arrows(){this.settings.loop?(this.elems.left.classList.add("active"),this.elems.right.classList.add("active")):this.settings.linkImages?(this.elems.right.classList.toggle("active",this.settings.currentImageIndex!==this.settings.lastImageIndex),this.elems.left.classList.toggle("active",this.settings.currentImageIndex!==this.settings.firstImageIndex)):(this.elems.left.classList.remove("active"),this.elems.right.classList.remove("active"))}close(){if(!this.state.fullScreenOpen){this.state.visible=!1;var e=n(()=>{this.elems.overlay.classList.remove("chocolat-visible")},this.elems.overlay),t=n(()=>{this.elems.wrapper.classList.remove("chocolat-visible")},this.elems.wrapper);return Promise.all([e,t]).then(()=>{this.elems.container.classList.remove("chocolat-open"),this.settings.afterClose.call(this)})}a()}destroy(){for(let e=this.events.length-1;0<=e;e--){var{element:t,eventName:s}=this.events[e];this.off(t,s)}this.state.initialized&&(this.state.fullScreenOpen&&(this.state.fullScreenOpen=a()),this.settings.currentImageIndex=void 0,this.state.visible=!1,this.state.initialized=!1,this.elems.container.classList.remove(...this._cssClasses),this.elems.wrapper.parentNode.removeChild(this.elems.wrapper))}markup(){this.elems.container.classList.add("chocolat-open",this.settings.className),"cover"==this.settings.imageSize&&this.elems.container.classList.add("chocolat-cover"),this.elems.container!==document.body&&this.elems.container.classList.add("chocolat-in-container"),this.elems.wrapper=document.createElement("div"),this.elems.wrapper.setAttribute("id","chocolat-content-"+this.settings.setIndex),this.elems.wrapper.setAttribute("class","chocolat-wrapper"),this.elems.container.appendChild(this.elems.wrapper),this.elems.overlay=document.createElement("div"),this.elems.overlay.setAttribute("class","chocolat-overlay"),this.elems.wrapper.appendChild(this.elems.overlay),this.elems.loader=document.createElement("div"),this.elems.loader.setAttribute("class","chocolat-loader"),this.elems.wrapper.appendChild(this.elems.loader),this.elems.layout=document.createElement("div"),this.elems.layout.setAttribute("class","chocolat-layout"),this.elems.wrapper.appendChild(this.elems.layout),this.elems.top=document.createElement("div"),this.elems.top.setAttribute("class","chocolat-top"),this.elems.layout.appendChild(this.elems.top),this.elems.center=document.createElement("div"),this.elems.center.setAttribute("class","chocolat-center"),this.elems.layout.appendChild(this.elems.center),this.elems.left=document.createElement("div"),this.elems.left.setAttribute("class","chocolat-left"),this.elems.center.appendChild(this.elems.left),this.elems.imageCanvas=document.createElement("div"),this.elems.imageCanvas.setAttribute("class","chocolat-image-canvas"),this.elems.center.appendChild(this.elems.imageCanvas),this.elems.imageWrapper=document.createElement("div"),this.elems.imageWrapper.setAttribute("class","chocolat-image-wrapper"),this.elems.imageCanvas.appendChild(this.elems.imageWrapper),this.elems.img=document.createElement("img"),this.elems.img.setAttribute("class","chocolat-img"),this.elems.imageWrapper.appendChild(this.elems.img),this.elems.right=document.createElement("div"),this.elems.right.setAttribute("class","chocolat-right"),this.elems.center.appendChild(this.elems.right),this.elems.bottom=document.createElement("div"),this.elems.bottom.setAttribute("class","chocolat-bottom"),this.elems.layout.appendChild(this.elems.bottom),this.elems.close=document.createElement("span"),this.elems.close.setAttribute("class","chocolat-close"),this.elems.top.appendChild(this.elems.close),this.elems.description=document.createElement("span"),this.elems.description.setAttribute("class","chocolat-description"),this.elems.bottom.appendChild(this.elems.description),this.elems.pagination=document.createElement("span"),this.elems.pagination.setAttribute("class","chocolat-pagination"),this.elems.bottom.appendChild(this.elems.pagination),this.elems.setTitle=document.createElement("span"),this.elems.setTitle.setAttribute("class","chocolat-set-title"),this.elems.setTitle.textContent=this.settings.setTitle(),this.elems.bottom.appendChild(this.elems.setTitle),this.elems.fullscreen=document.createElement("span"),this.elems.fullscreen.setAttribute("class","chocolat-fullscreen"),this.elems.bottom.appendChild(this.elems.fullscreen),this.settings.afterMarkup.call(this)}attachListeners(){this.off(document,"keydown.chocolat"),this.on(document,"keydown.chocolat",e=>{this.state.initialized&&(37==e.keyCode?this.change(-1):39==e.keyCode?this.change(1):27==e.keyCode&&this.close())});var e=this.elems.wrapper.querySelector(".chocolat-right");this.off(e,"click.chocolat"),this.on(e,"click.chocolat",()=>{this.change(1)});e=this.elems.wrapper.querySelector(".chocolat-left");this.off(e,"click.chocolat"),this.on(e,"click.chocolat",()=>{this.change(-1)}),this.off(this.elems.close,"click.chocolat"),this.on(this.elems.close,"click.chocolat",this.close.bind(this)),this.off(this.elems.fullscreen,"click.chocolat"),this.on(this.elems.fullscreen,"click.chocolat",()=>{this.state.fullScreenOpen?a():c(this.elems.wrapper)}),this.off(document,"fullscreenchange.chocolat"),this.on(document,"fullscreenchange.chocolat",()=>{document.fullscreenElement?this.state.fullScreenOpen=!0:this.state.fullScreenOpen=!1}),this.settings.closeOnBackgroundClick&&(this.off(this.elems.overlay,"click.chocolat"),this.on(this.elems.overlay,"click.chocolat",this.close.bind(this))),this.off(this.elems.wrapper,"click.chocolat"),this.on(this.elems.wrapper,"click.chocolat",()=>{null!==this.state.initialZoomState&&this.state.visible&&(this.elems.container.classList.add("chocolat-zooming-out"),this.zoomOut().then(()=>{this.elems.container.classList.remove("chocolat-zoomed"),this.elems.container.classList.remove("chocolat-zooming-out")}))}),this.off(this.elems.imageWrapper,"click.chocolat"),this.on(this.elems.imageWrapper,"click.chocolat",e=>{null===this.state.initialZoomState&&this.elems.container.classList.contains("chocolat-zoomable")&&(e.stopPropagation(),this.elems.container.classList.add("chocolat-zooming-in"),this.zoomIn(e).then(()=>{this.elems.container.classList.add("chocolat-zoomed"),this.elems.container.classList.remove("chocolat-zooming-in")}))}),this.on(this.elems.wrapper,"mousemove.chocolat",s=>{if(null!==this.state.initialZoomState&&this.state.visible){var i,l=this.elems.wrapper.getBoundingClientRect(),a={top:l.top+window.scrollY,left:l.left+window.scrollX},n=this.elems.wrapper.clientHeight,o=this.elems.wrapper.clientWidth,c=this.elems.img.width,l=this.elems.img.height,a=[s.pageX-o/2-a.left,s.pageY-n/2-a.top];let e=0;o<c&&(i=this.settings.zoomedPaddingX(c,o),e=a[0]/(o/2),e*=(c-o)/2+i);let t=0;n<l&&(i=this.settings.zoomedPaddingY(l,n),t=a[1]/(n/2),t*=(l-n)/2+i),this.elems.img.style.marginLeft=-e+"px",this.elems.img.style.marginTop=-t+"px"}}),this.on(window,"resize.chocolat",e=>{var t,s;this.state.initialized&&this.state.visible&&(t=50,s=()=>{var{}=l({imgHeight:this.elems.img.naturalHeight,imgWidth:this.elems.img.naturalWidth,containerHeight:this.elems.wrapper.clientHeight,containerWidth:this.elems.wrapper.clientWidth,canvasWidth:this.elems.imageCanvas.clientWidth,canvasHeight:this.elems.imageCanvas.clientHeight,imageSize:this.settings.imageSize});this.position(this.elems.img).then(()=>{this.elems.container.classList.toggle("chocolat-zoomable",this.zoomable(this.elems.img,this.elems.wrapper))})},clearTimeout(i),i=setTimeout(function(){s()},t),i)})}zoomable(e,t){var s=t.clientWidth,t=t.clientHeight,t=!(!this.settings.allowZoom||!(e.naturalWidth>s||e.naturalHeight>t)),e=e.clientWidth>e.naturalWidth||e.clientHeight>e.naturalHeight;return t&&!e}zoomIn(e){return this.state.initialZoomState=this.settings.imageSize,this.settings.imageSize="native",this.position(this.elems.img)}zoomOut(e){return this.settings.imageSize=this.state.initialZoomState||this.settings.imageSize,this.state.initialZoomState=null,this.elems.img.style.margin=0,this.position(this.elems.img)}on(e,t,s){s=this.events.push({element:e,eventName:t,cb:s});e.addEventListener(t.split(".")[0],this.events[s-1].cb)}off(t,s){var e=this.events.findIndex(e=>e.element===t&&e.eventName===s);this.events[e]&&(t.removeEventListener(s.split(".")[0],this.events[e].cb),this.events.splice(e,1))}}const r=[];window.Chocolat=function(e,t){t=Object.assign({},s,{images:[]},t,{setIndex:r.length}),t=new h(e,t);return r.push(t),t}}(),(e=>{if(!window.IntersectionObserver){console.log("observers not supported");const t=e.querySelectorAll("fade");t.forEach(e=>{e.classList.remove("fade"),e.classList.contains("fade-in")&&e.classList.remove("fade-in"),e.classList.contains("swipe-left")&&e.classList.remove("swipe-left"),e.classList.contains("swipe-right")&&e.classList.remove("swipe-right"),e.classList.contains("swipe-up")&&e.classList.remove("swipe-up")})}if(window.IntersectionObserver){const s=new IntersectionObserver((e,t)=>{e.forEach(e=>{e.isIntersecting&&(e.target.classList.contains("fade-in")&&e.target.classList.add("appear"),e.target.classList.contains("swipe-left")&&e.target.classList.add("position"),e.target.classList.contains("swipe-right")&&e.target.classList.add("position"),e.target.classList.contains("swipe-up")&&e.target.classList.add("position"),e.target.classList.contains("swipe-down")&&e.target.classList.add("position"),t.unobserve(e.target))})},{threshold:0,rootMargin:"0px 0px -150px 0px"}),i=e.querySelectorAll(".fade"),l=e.querySelectorAll(".fade-stagger");l.forEach(s=>{s.querySelectorAll(".fade").forEach((e,t)=>{e.style.transitionDelay=`${((e,t,s)=>{const i=getComputedStyle(e);return"grid"==i.getPropertyValue("display")?s%i.getPropertyValue("grid-template-columns").split(" ").length*t:s*t})(s,.25,t)}s`})}),i.forEach(e=>{s.observe(e)}),i.forEach(e=>{s.observe(e)})}})(document,window);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
